/**
 * File autogenerated in this folder as pwd with command:
 * $ fixtureGenerator -s {{settingsPath}}
 */

{% for item in nestedFixtures %}
import {
    PropsForNew{{item.fixtureName}},
    {{item.fixtureName}}
} from "./{{item.fileName}}";
{% endfor %}

export interface PropsForNew{{fixtureName}} {
{% for item in props %}
    {% if item | isFixture %}
    {{item.propName}}?: PropsForNew{{item.tsType}},
    {% else %}
    {{item.propName}}?: {{item.tsType}},
    {% endif %}
{% endfor %}
}

export class {{fixtureName}} {
    private readonly props: any;

    public build<T>(): T {
        return JSON.parse(JSON.stringify(Object.assign(
            {},
            this.props, {
        {% for item in nestedFixtures %}
            {% if item.isArray %}
                {{item.propName}}: this.props.{{item.propName}}.map((i)=> i.build())
            {% else %}
                {{item.propName}}: this.props.{{item.propName}}.build()
            {% endif %}
        {% endfor %}
            }
        ))) as T;
    }

    constructor(props: PropsForNew{{fixtureName}} = {}) {
        this.props = {
    {% for item in props %}
        {% if item | isFixture %}
            {% if item.isArray %}
            {{item.propName}}: (props.{{item.propName}} ?? [{}]).map((i)=> new {{item.value}}(i)),
            {% else %}
            {{item.propName}}: new {{item.value}}(props.{{item.propName}} ?? {}),
            {% endif %}
        {% elif item | isDate %}
            {{item.propName}}: props.{{item.propName}} ?? {% if item.isArray %}{{item.value | safe}}.map((d)=> new Date(d)){% else %}new Date({{item.value | safe}}){% endif %},
        {% else %}
            {{item.propName}}: props.{{item.propName}} ?? {{item.value | safe}},
        {% endif %}
    {% endfor %}
        }
    }

{% for item in props %}
    public with{{item.propName | upperFirstChar}}({{item.propName}}: {{item.tsType}}): {{fixtureName}} {
        this.props.{{item.propName}} = {{item.propName}};
        return this;
    }

{% endfor %}
{% for item in props %}
    public get{{item.propName | upperFirstChar}}(): {{item.tsType}} {
        return this.props.{{item.propName}};
    }

{% endfor %}
}
